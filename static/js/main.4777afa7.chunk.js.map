{"version":3,"sources":["utils/API.jsx","components/EmployeeRow/EmployeeRow/EmployeeRow.jsx","containers/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","EmployeeRow","picture","first","last","phone","email","dob","fullName","alt","src","moment","format","Home","useState","employees","setEmployees","sortOrder","setSortOrder","searchEmployees","setSearchEmployees","useEffect","API","then","res","data","results","catch","err","console","log","className","type","placeholder","aria-label","onChange","e","value","target","filteredEmployees","filter","employee","name","toLowerCase","includes","scope","onClick","sortedEmployees","sort","a","b","map","large","date","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4777afa7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get(\r\n      \"https://randomuser.me/api?nat=us&inc=id,name,phone,dob,picture,email&results=10\"\r\n    );\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst EmployeeRow = ({ picture, first, last, phone, email, dob }) => {\r\n  const fullName = `${first} ${last}`;\r\n  const alt = `${fullName}'s Image`;\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img src={picture} alt={alt} />\r\n      </td>\r\n      <td>{fullName}</td>\r\n      <td>{phone}</td>\r\n      <td>{email}</td>\r\n      <td>{moment(dob).format(\"MM-DD-YYYY\")}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EmployeeRow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport EmployeeRow from \"../components/EmployeeRow/EmployeeRow/EmployeeRow\";\r\n\r\nconst Home = () => {\r\n  // employees state\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  // filter order state\r\n  const [sortOrder, setSortOrder] = useState(\"\");\r\n\r\n  // search order state\r\n  const [searchEmployees, setSearchEmployees] = useState([]);\r\n\r\n  // makes API call when page loads\r\n  useEffect(() => {\r\n    API.getEmployees()\r\n      .then((res) => {\r\n        //console.log(res.data.results);\r\n        setEmployees(res.data.results);\r\n        setSearchEmployees(res.data.results);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // sort function for ascending and descending order\r\n  const sortBy = () => {\r\n    let sortedEmployees = [];\r\n\r\n    // sorts the data in ascending order\r\n    if (!sortOrder || sortOrder === \"ascending\") {\r\n      sortedEmployees = [...employees].sort((a, b) =>\r\n        a.name.first < b.name.first ? -1 : 1\r\n      );\r\n      setSortOrder(\"descending\");\r\n\r\n      // sorts data in descending order\r\n    } else {\r\n      sortedEmployees = [...employees].sort((a, b) =>\r\n        a.name.first > b.name.first ? -1 : 1\r\n      );\r\n      setSortOrder(\"ascending\");\r\n    }\r\n    console.log(\"test\");\r\n    console.log(sortedEmployees);\r\n    setEmployees(sortedEmployees);\r\n    setSearchEmployees(sortedEmployees);\r\n  };\r\n\r\n  // search employees function\r\n  const search = (e) => {\r\n    const value = e.target.value;\r\n    console.log(`value: ${value}`);\r\n\r\n    if (value === \"\") {\r\n      setSearchEmployees(employees);\r\n      console.log(employees);\r\n    }\r\n\r\n    let filteredEmployees = [...employees].filter((employee) => {\r\n      return employee.name.first.toLowerCase().includes(value);\r\n    });\r\n\r\n    setSearchEmployees(filteredEmployees);\r\n    console.log(\"filtered\");\r\n    console.log(filteredEmployees);\r\n    //console.log(searchEmployees);\r\n    console.log(\"employees\");\r\n    console.log(employees);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2 pt-3\">\r\n          <div className=\"text-center\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              onChange={search}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"text-center\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Employee Picture</th>\r\n                  <th scope=\"col\" onClick={sortBy}>\r\n                    Name\r\n                  </th>\r\n                  <th scope=\"col\">Phone</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Date of Birth</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* maps over employees state and passes properties to EmployeeRow component */}\r\n                {searchEmployees.map((employee) => (\r\n                  <EmployeeRow\r\n                    key={employee.id.value}\r\n                    first={employee.name.first}\r\n                    last={employee.name.last}\r\n                    phone={employee.phone}\r\n                    email={employee.email}\r\n                    picture={employee.picture.large}\r\n                    dob={employee.dob.date}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}