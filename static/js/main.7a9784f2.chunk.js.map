{"version":3,"sources":["utils/API.jsx","components/EmployeeRow/EmployeeRow/EmployeeRow.jsx","components/EmployeeRow/Search/Search.jsx","containers/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","EmployeeRow","picture","first","last","phone","email","dob","fullName","alt","src","className","moment","format","Search","props","type","placeholder","aria-label","onChange","searchEmployees","Home","useState","employees","setEmployees","sortOrder","setSortOrder","search","setSearch","useEffect","API","then","res","data","results","catch","err","console","log","e","value","target","scope","onClick","sortedEmployees","sort","a","b","name","filter","employee","toLowerCase","includes","toLocaleLowerCase","map","large","date","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a9784f2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get(\r\n      \"https://randomuser.me/api?nat=us&inc=id,name,phone,dob,picture,email&results=100\"\r\n    );\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst EmployeeRow = ({ picture, first, last, phone, email, dob }) => {\r\n  const fullName = `${first} ${last}`;\r\n  const alt = `${fullName}'s Image`;\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img src={picture} alt={alt} />\r\n      </td>\r\n      <td className=\"align-middle\">{fullName}</td>\r\n      <td className=\"align-middle\">{phone}</td>\r\n      <td className=\"align-middle\">{email}</td>\r\n      <td className=\"align-middle\">{moment(dob).format(\"MM-DD-YYYY\")}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EmployeeRow;\r\n","import React from \"react\";\n\nconst Search = (props) => {\n  return (\n    <input\n      className=\"form-control me-2\"\n      type=\"search\"\n      placeholder=\"Search by Phone Number\"\n      aria-label=\"Search\"\n      onChange={props.searchEmployees}\n    />\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport EmployeeRow from \"../components/EmployeeRow/EmployeeRow/EmployeeRow\";\nimport Search from \"../components/EmployeeRow/Search/Search\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  // employees state\n  const [employees, setEmployees] = useState([]);\n\n  // filter order state\n  const [sortOrder, setSortOrder] = useState(\"\");\n\n  // search order state\n  const [search, setSearch] = useState(\"\");\n\n  // makes API call when page loads\n  useEffect(() => {\n    API.getEmployees()\n      .then((res) => {\n        //console.log(res.data.results);\n        setEmployees(res.data.results);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // sort function for ascending and descending order\n  const sortBy = () => {\n    let sortedEmployees = [];\n\n    // sorts the data in ascending order\n    if (!sortOrder || sortOrder === \"ascending\") {\n      sortedEmployees = [...employees].sort((a, b) =>\n        a.name.first < b.name.first ? -1 : 1\n      );\n      setSortOrder(\"descending\");\n\n      // sorts data in descending order\n    } else {\n      sortedEmployees = [...employees].sort((a, b) =>\n        a.name.first > b.name.first ? -1 : 1\n      );\n      setSortOrder(\"ascending\");\n    }\n    // console.log(\"test\");\n    // console.log(sortedEmployees);\n    setEmployees(sortedEmployees);\n  };\n\n  const searchEmployees = (e) => {\n    let value = e.target.value;\n    setSearch(value);\n\n    console.log(value);\n  };\n\n  // search employees function\n\n  return (\n    <div>\n      <div className=\"row header\">\n        <div className=\"col\">\n          <h1 className=\"p-3 text-center\">Employee Directory</h1>\n          <h5 className=\"p-2 text-center\">\n            Search for Employees by Phone number via the search box or sort\n            Employees by Employee Name.\n          </h5>\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-2 p-3 \">\n              <div>\n                <Search searchEmployees={searchEmployees} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Employee Picture</th>\n                  <th scope=\"col\" onClick={sortBy}>\n                    {!sortOrder ? null : sortOrder === \"ascending\" ? (\n                      <i className=\"arrow up\"></i>\n                    ) : (\n                      <i className=\"arrow down\"></i>\n                    )}\n                    Employee Name\n                  </th>\n                  <th scope=\"col\">Phone</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">Date of Birth</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* maps over employees state and passes properties to EmployeeRow component */}\n                {employees\n                  .filter((employee) =>\n                    employee.phone\n                      .toLowerCase()\n                      .includes(search.toLocaleLowerCase())\n                  )\n                  .map((employee) => (\n                    <EmployeeRow\n                      key={employee.id.value}\n                      first={employee.name.first}\n                      last={employee.name.last}\n                      phone={employee.phone}\n                      email={employee.email}\n                      picture={employee.picture.large}\n                      dob={employee.dob.date}\n                    />\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}